services:
  api-service:
    hostname: ops-service
    build:
      context: .
    ports:
      - "8080:8080"
    expose:
      - 8080
    deploy:
      resources:
        limits:
          cpus: 4.0
          memory: 1G
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    hostname: ops-postgres
    build:
      context: docker-psql/.
    env_file: docker-psql/.env
    user: postgres
    volumes:
      - ./docker-psql:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  elasticsearch:
    hostname: ops-elastic-search
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.4
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.transport.ssl.enabled=false
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
    volumes:
      - esdata:/usr/share/elasticsearch/data

  kibana:
    image: docker.elastic.co/kibana/kibana:8.12.0
    container_name: kibana
    environment:
      XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY: nklkdhpfsp23992394yhr9jpfpo2j334

volumes:
  esdata:
    driver: local
